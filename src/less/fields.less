@import 'variables.less';
// GENERAL STYLES
// --------------


// Make all forms have space below them
form {
	margin: 0 0 3px;
}

fieldset {
	padding: 0;
	margin: 0;
	border: 0;
}

// Groups of fields with labels on top (legends)
legend,
.form-element__legend {
	margin-top: 0; //override delta()
	color: @formLabelColor;
	font-size: @fontSizeSmall;
	font-weight: bold;
	padding: 0;

	// Small
	small {
		font-size: @fontSizeMini;
		color: @grayLight;
	}
}


input,
button,
select,
textarea {
	margin: 0;
	font-size: 100%;
	font-family: @sansFontFamily; // And only set font-family here for those that need it (note the missing label element)
	outline: none;
	vertical-align: middle;
}

// Form controls
// -------------------------

// Shared size and type resets
select,
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
	display: block;
	padding: 8px 0px 8px 8px;
	border-radius: @inputBorderRadius;
	color: @gray;
	font-size: @fontSize;
	line-height: 14px;
	vertical-align: middle;
}
select {
	padding: 8px 0px 8px 8px;
	border-radius: @inputBorderRadius;
	font-size: @fontSize;
	line-height: 14px;
	background-color: @white;
	height: inherit!important;
	-webkit-appearance: none;
	-moz-appearance: none;
}

button,
html input[type="button"], // Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls.
input[type="reset"],
input[type="submit"] {
	-webkit-appearance: button; // Corrects inability to style clickable `input` types in iOS.
	cursor: pointer; // Improves usability and consistency of cursor style between image-type `input` and others.
}
label,
select,
button,
input[type="button"],
input[type="reset"],
input[type="submit"],
input[type="radio"],
input[type="checkbox"] {
	cursor: pointer; // Improves usability and consistency of cursor style between image-type `input` and others.
}
input[type="search"] { // Appearance in Safari/Chrome
	box-sizing: content-box;
	-webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button {
	-webkit-appearance: none; // Inner-padding issues in Chrome OSX, Safari 5
}

// Reset height since textareas have rows
textarea {
	height: auto;
	vertical-align: top; // Readability and alignment cross-browser
}
// Everything else
textarea,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"],
.uneditable-input {
	background-color: @inputBackground;
	border: 1px solid @inputBorder;
	box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
	transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;

	// Focus state
	&:focus {
		border: 1px solid @blue;
		outline: 0;
	}
}

// Reset width of input images, buttons, radios, checkboxes
input[type="file"],
input[type="image"],
input[type="submit"],
input[type="reset"],
input[type="button"],
input[type="radio"],
input[type="checkbox"] {
	width: auto; // Override of generic input selector
}

// Set the height of select and file controls to match text inputs
select,
input[type="file"] {
	line-height: @inputHeight;
}

// Make select elements obey height by applying a border
select {
	color: @gray;
	height: @inputHeight;
	width: 220px; // default input width + 10px of padding that doesn't get applied
	border: 1px solid @inputBorder;
	background-color: @inputBackground; // Chrome on Linux and Mobile Safari need background-color
	// Focus state
	&:focus {
		border: 1px solid @blue;
		outline: 0;
	}
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
	height: auto;
	padding: 0;
	option {
		padding: 5px 10px 5px;
	}
}

// HTML5 invalid states
input:focus:invalid,
textarea:focus:invalid,
select:focus:invalid {
	border-color: @red;
	&:focus {
		border-color: darken(@red, 10%);
		box-shadow: 0 0 6px lighten(@red, 20%);
	}
}

input.invalid,
textarea.invalid,
select.invalid {
	border-color: darken(@red, 10%);
}

input[disabled],
textarea[disabled],
select[disabled] {
	background-color: @grayLighter;
	color: @grayDark;
	cursor: not-allowed;
	user-select: none;
}

// Identify controls by their labels
.form-element__label {
	display: inline-block;
	margin: 0 0 7px 3px;
	color: @formLabelColor;
	font-size: @fontSizeSmall;
	font-weight: bold;
}

.form-element__control {
	position: relative;

	+ .form-element__control { // sibling controls need some margin between each other
		margin-top: 0.5em;
	}
}

// Text input styles
.input-has-icon {

	.icon {
		padding: 9px 10px 5px;
		position: absolute;
		top: 0;
	}

	.input {
		padding-left: 2.5em;
	}
}

.input-has-icon--right {
	.icon {
		right: 0;
	}

	.input {
		padding-left: 10px;
		padding-right: 2.5em;
	}
}

.input-has-icon--left-right {
	.icon--right {
		right: 0;
	}

	.input {
		padding-right: 2.5em;
	}
}

.input-has-button {
	display: flex;
}

.input-has-button--left {
	.input {
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
		border-left: 0;
	}
	.btn {
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
	}
}

.input-has-button--right {
	.input {
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
		border-right: 0;
	}
	.btn {
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;
	}
}

.form-element__help {
	margin: 7px 0 0 3px;
}

.has-error, .has-success {
	//Errored inputs have an icon to the right
	.input {
		padding-right: 2.5em;
	}

	.form-element__control--input:after {
		font-style: normal;
		text-decoration: none;
		text-rendering: optimizeLegibility;
		white-space: nowrap;
		font-feature-settings: "liga";
		font-smoothing: antialiased;
		padding: 9px 10px 5px;
		position: absolute;
		top: 0;
		right: 0;
	}
}

.has-error {
	.input,
	.textarea,
	.select {
		border-color: @red;
	}

	.form-element__help {
		color: @red;
	}

	.form-element__control--input:after {
		content: 'alert';
		color: @red;
	}
}

.has-success {
	.input,
	.textarea,
	.select {
		border-color: @green;
	}

	.form-element__control--input:after {
		content: 'check';
		color: @green;
	}
}


// INPUT SIZES
// -----------

// General classes for quick sizes
.input, .textarea, .select {
	width: 100%;
}
.input--mini {
	width: 60px;
}
.input--small {
	width: 90px;
}
.input--medium {
	width: 150px;
}
.input--large {
	width: 210px;
}
.input--xlarge {
	width: 270px;
}
.input--xxlarge {
	width: 530px;
}


// INPUT GROUPS
// ------------

// Allow us to put symbols and text within the input field for a cleaner look
.input-append,
.input-prepend {
	display: inline-block;
	margin-bottom: 14px / 2;
	vertical-align: middle;
	white-space: nowrap; // Prevent span and input from separating

	input,
	select,
	.uneditable-input {
		display: inline-block;
		position: relative; // placed here by default so that on :focus we can place the input above the .add-on for full border and box-shadow goodness
		margin-bottom: 0; // prevent bottom margin from screwing up alignment in stacked forms
		*margin-left: 0;
		vertical-align: top;
		border-radius: 0 @inputBorderRadius @inputBorderRadius 0;
		// Make input on top when focused so blue border and shadow always show
		&:focus {
			z-index: 2;
		}
	}
	.add-on {
		display: inline-block;
		min-width: 16px;
		padding: 5px;
		width: auto;
		background-color: @grayLight;
		border: 1px solid @inputBorder;
		font-size: @fontSize;
		font-weight: normal;
		line-height: 14px;
		text-align: center;
	}
	.add-on,
	.btn,
	.btn-group > .dropdown-toggle {
		border-radius: 0;
		vertical-align: top;
	}
	.active {
		background-color: lighten(@green, 30);
		border-color: @green;
	}
	& > .btn + .btn {
		margin-left: -5px;
	}
}

.input-prepend {
	.add-on,
	.btn {
		margin-right: -1px;
	}
	.add-on:first-child,
	.btn:first-child {
		// FYI, `.btn:first-child` accounts for a button group that is prepended
		border-radius: @inputBorderRadius 0 0 @inputBorderRadius;
	}
}

.input-append {
	input,
	select,
	.uneditable-input {
		border-radius: @inputBorderRadius 0 0 @inputBorderRadius;
		+ .btn-group .btn:last-child {
			border-radius: 0 @inputBorderRadius @inputBorderRadius 0;
		}
	}
	.add-on,
	.btn,
	.btn-group {
		margin-left: -1px;
	}
	.add-on:last-child,
	.btn:last-child,
	.btn-group:last-child > .dropdown-toggle {
		border-radius: 0 @inputBorderRadius @inputBorderRadius 0;
	}
	.btn-group .btn:first-child {
		border-radius: 0;
	}
}

// Remove all border-radius for inputs with both prepend and append
.input-prepend.input-append {
	input,
	select,
	.uneditable-input {
		border-radius: 0;
		+ .btn-group .btn {
			border-radius: 0 @inputBorderRadius @inputBorderRadius 0;
		}
	}
	.add-on:first-child,
	.btn:first-child {
		margin-right: -1px;
		border-radius: @inputBorderRadius 0 0 @inputBorderRadius;
	}
	.add-on:last-child,
	.btn:last-child {
		margin-left: -1px;
		border-radius: 0 @inputBorderRadius @inputBorderRadius 0;
	}
	.btn-group:first-child {
		margin-left: 0;
	}
}


// Checkboxes
// -----------------
.chk, .radio, .chk-toggle {
	line-height: normal;
	opacity: 0;
	position: absolute;
}

.chk + span:before, .chk + label:before,
.radio + label:before {
	content: ' ';
	display: inline-block;
	margin-right: 8px;
	width: 1em;
	height: 1em;

	background-color: @inputBackground;
	border: 1px solid @inputBorder;

	line-height: normal;
	vertical-align: text-bottom;
}
.chk + span:before, .chk + label:before {

	border-radius: @borderRadiusSmall;
	font-size: @fontSizeSmall;
	padding: 0 1px 1px 1px;
}
.chk:checked + span:before, .chk:checked + label:before {
	content: '\2713';
	color: @grayDark;
}
.chk:indeterminate + span:before, .chk:indeterminate + label:before {
	content: '\002D';
	color: @grayDark;
	font-weight: normal;
}

.chk:focus + span:before, .chk:focus + label:before {
	border-color: @blue;
}
.chk[disabled] + span:before, .chk[disabled] + label:before,
.radio[disabled] + label:before {
	background-color: @grayLighter;
	cursor: not-allowed;
	user-select: none;
}
.chk[disabled] + label,
.radio[disabled] + label {
	cursor: not-allowed;
}

// Radio
// -----------------
.radio + label:before {
	border-radius: 100%;
}

.radio:checked + label:before {
	box-shadow: inset 0px 0px 0px .25em @inputBackground;
	background: @grayDark;
}

.radio:focus + span:before, .radio:focus + label:before {
	border-color: @blue;
}

// Check Toggle
// -----------------
.chk-toggle + label {
	position: relative;

	&:before, &:after {
		font-size: 10px; //JD heights are all base 10, resetting to make the math nice and easy
		content: ' ';
	}

	&:after {
		position: relative;
		cursor: pointer;
		display: inline-block;
		height: 2em;
		width: 4em;
		border-radius: 4em;
		border: 1px solid @gray;
		background-color: @gray;
		transition: border-color 0.25s ease, background-color 0.25s ease;
		vertical-align: middle;
		margin-left: 8px;
	}
	&:before {
		position: absolute;
		right: 0;
		width: 1em;
		height: 1em;

		margin: .5em 0; //1em height + .5em top + .5em bottom = height of 2em which matches the slider background
		margin-right: 2.5em; // 1em width + 2.5em = 3.5 which is .5em less than the slider background width
		border: 1px solid @white;
		background-color: @white;
		border-radius: 1em;

		transition: margin 0.25s ease;
		z-index: 1;
	}
}

.chk-toggle:checked + label:after {
	border-color: @green;
	background-color: @green;
}
.chk-toggle:checked + label:before {
	margin-right: 0.5em;
}

.chk-toggle:focus + label:after,
.chk-toggle:hover + label:after {
	border-color: @grayLight;
	background-color: @grayLight;
}

.chk-toggle:checked:focus + label:after,
.chk-toggle:checked:hover + label:after {
	border-color: @green;
	background-color: @green;
}

.has-error{
	.chk + span:before,
	.chk + label:before,
	.radio + label:before {
		border-color: @red;
	}
}

// Common properties
// -----------------

.form-inline {
	input, label, .btn-group {
		display: inline-block;
	}

	// Remove margin for input-prepend/-append
	.input-append, .input-prepend {
		margin-bottom: 0;
	}
}

::placeholder {
	color: @grayDark;
}


input:focus::-webkit-input-placeholder { color: transparent; }
input:focus:-moz-placeholder { color: transparent; } // Firefox 18-
input:focus::-moz-placeholder { color: transparent; } // Firefox 19+
input:focus:-ms-input-placeholder { color: transparent; }

.value-control {
	&[data-value-symbol] {
		position: relative;
		&:before {
			content: attr(data-value-symbol);
			position: absolute;
			top: 8px;
			left: 0.5em;
		}
		.value-control__input {
			padding-left: 1em;
			padding-right: 0.5em;
			width: 5.5em;
		}
	}
}
